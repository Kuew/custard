#!/bin/sh
# run me with . activate

OLD_PATH=$PATH
OLD_PS1=$PS1
OLD_NODE_PATH=$NODE_PATH
PATH=$(pwd)/node_modules/.bin:$(pwd)/bin:$PATH

# Fiddling with NODE_PATH appears not to be necessary.  (node
# picks up modules from ./node_modules, but maybe that's only
# because i'm using nvm)

# Add ./code to NODE_PATH, adding a separating ':' if NODE_PATH
# is already set.
# See http://pubs.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_06_02
export NODE_PATH=$(pwd)/server/code${NODE_PATH+:}${NODE_PATH}

thisdir=$(basename "$(pwd)")
first2=$(printf '%.2s' "$thisdir")

PS1="[$first2]$PS1"
deactivate () {
    PATH=$OLD_PATH
    PS1=$OLD_PS1
    NODE_PATH=$OLD_NODE_PATH
    unset -f deactivate
    unset -f mocha
}

mocha () {
    # Consider pushing to external program.
    eval last=\${$#}

    if [ "$#" = "0" ]
    then
        env mocha $(find test -name '*.coffee' | sort)
    else
        if [ -d "$last" ]
        then
            env mocha $(find "$last" -name '*.coffee' | sort)
        else
            env mocha "$@"
        fi
    fi
}

s=../swops-secret/keys.sh
test -e "$s" && . "$s" && echo yummm, keys.sh
true
